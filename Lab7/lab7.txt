JIAXUAN XUE
705142227

1.Get a copy of the Diffutils repository, in Git format
 command used: git clone https://git.savannah.gnu.org/git/diffutils.git

2.Get a log of changes to Diffutilsâ€™ master branch
 command used: cd lab7/diffutils
               git log > git-log.txt

3.Generate a list of tags used for Diffutils
 command used: git tag > git-tags.txt

4.Find the commit 
 command used: emacs git-log.txt
               C-s maint: quote 'like this' or "like this", not `like this'
 
 commit 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f
 Generate a patch
 command used:
 git format-patch -1 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f --stdout > quote-patch.txt


5.Check out version 3.0 of Diffutils
  command used: git checkout v3.0
 
6.apply the patch
  command used:patch -p1 < quote-patch.txt
  It cannot find certain files while patching, but hunk succeeded for most of them and 
failed at a few lines.

7.command used:git status
 HEAD detached at v3.0
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   NEWS
	modified:   README
	modified:   TODO
	modified:   doc/diagmeet.note
	modified:   ms/config.bat
	modified:   ms/config.site
	modified:   po/en.po
	modified:   src/analyze.c
	modified:   src/cmp.c
	modified:   src/context.c
	modified:   src/diff.c
	modified:   src/diff.h
	modified:   src/diff3.c
	modified:   src/dir.c
	modified:   src/ifdef.c
	modified:   src/io.c
	modified:   src/sdiff.c
	modified:   src/side.c
	modified:   src/system.h
	modified:   src/util.c
	modified:   tests/help-version

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	NEWS.orig
	README-hacking.orig
	README-hacking.rej
	README.orig
	README.rej
	cfg.mk.orig
	cfg.mk.rej
	git-log.txt
	git-tags.txt
	ms/config.site.orig
	quote-patch.txt
	src/cmp.c.orig
	src/context.c.orig
	src/diff.c.orig
	src/diff.c.rej
	src/diff.h.orig
	src/diff3.c.orig
	src/diff3.c.rej
	src/dir.c.orig
	src/sdiff.c.orig
	src/system.h.orig
	src/util.c.orig
	tests/help-version.orig

no changes added to commit (use "git add" and/or "git commit -a")

8.C-x v =
Compare the work files in the current VC fileset with the versions you started from (vc-diff). 
C-x v u
Revert the work file(s) in the current VC fileset to the last revision (vc-revert).
C-c C-a
Apply this hunk to its target file (diff-apply-hunk). 
C-c C-c
Go to the source file and line corresponding to this hunk (diff-goto-source). 

9.For all the non .c files,
        modified:   NEWS
	modified:   README
	modified:   TODO
	modified:   doc/diagmeet.note
	modified:   ms/config.bat
	modified:   ms/config.site
	modified:   po/en.po
	modified:   src/diff.h
	modified:   src/system.h
	modified:   tests/help-version
command used:
 use C-x v u to revert and input yes
 use C-x v = to check
 use C-x C-c to exit

 
 For all the .c files,
    modified:   NEWS
	modified:   src/analyze.c
	modified:   src/cmp.c
	modified:   src/context.c
	modified:   src/diff.c
	modified:   src/diff3.c
	modified:   src/dir.c
	modified:   src/ifdef.c
	modified:   src/io.c
	modified:   src/sdiff.c
	modified:   src/side.c
	modified:   src/util.c
command used:
C-x v = to check the difference
use C-c C-c to manually go through all the changes and undo the required ones
use C-c C-a to apply this hunk to its target file 
use C-x v = to check again
use C-x C-c to exit
I used the above method to undo most of the comments and documentation and keep the 
change to the actual pieces of code.

10. command used: ls src/*.c.rej
src/diff3.c.rej  src/diff.c.rej

reading through the corresponding .c file and manually add the patch by C S to search 
for the keyword under emacs

11.command used:git clean -f
Removing NEWS.orig
Removing README-hacking.orig
Removing README-hacking.rej
Removing README.orig
Removing README.rej
Removing cfg.mk.orig
Removing cfg.mk.rej
Removing git-log.txt
Removing git-tags.txt
Removing ms/config.site.orig
Removing quote-patch.txt
Removing src/#diff.c.rej#
Removing src/cmp.c.orig
Removing src/context.c.orig
Removing src/diff.c.orig
Removing src/diff.c.rej
Removing src/diff.h.orig
Removing src/diff3.c.orig
Removing src/diff3.c.rej
Removing src/dir.c.orig
Removing src/sdiff.c.orig
Removing src/system.h.orig
Removing src/util.c.orig
Removing tests/help-version.orig

12. command used:git status
HEAD detached at v3.0
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   src/cmp.c
	modified:   src/diff.c
	modified:   src/diff3.c
	modified:   src/dir.c
	modified:   src/sdiff.c
	modified:   src/util.c

no changes added to commit (use "git add" and/or "git commit -a")

command used:git diff > quote-3.0-patch.txt
use git diff to generate the patch file

13.command used:ldd --version
  ldd (GNU libc) 2.12
  no need of additional patch on lnxsrv05

by reading through README-hacking, use the following command to build Diffutils
 ./bootstrap
 ./configure
 make
 make check

To verify that Diffutils
command used: src/diff . -
src/diff: cannot compare '-' to a directory 
command used: src/diff --help
Usage: src/diff [OPTION]... FILES
Compare files line by line.

  -i  --ignore-case  Ignore case differences in file contents.
  --ignore-file-name-case  Ignore case when comparing file names.
  --no-ignore-file-name-case  Consider case when comparing file names.
  -E  --ignore-tab-expansion  Ignore changes due to tab expansion.
  -b  --ignore-space-change  Ignore changes in the amount of white space.
  -w  --ignore-all-space  Ignore all white space.
  -B  --ignore-blank-lines  Ignore changes whose lines are all blank.
  -I RE  --ignore-matching-lines=RE  Ignore changes whose lines all match RE.
  --strip-trailing-cr  Strip trailing carriage return on input.
  -a  --text  Treat all files as text.

  -c  -C NUM  --context[=NUM]  Output NUM (default 3) lines of copied context.
  -u  -U NUM  --unified[=NUM]  Output NUM (default 3) lines of unified context.
    --label LABEL  Use LABEL instead of file name.
    -p  --show-c-function  Show which C function each change is in.
    -F RE  --show-function-line=RE  Show the most recent line matching RE.
  -q  --brief  Output only whether files differ.
  -e  --ed  Output an ed script.
  --normal  Output a normal diff.
  -n  --rcs  Output an RCS format diff.
  -y  --side-by-side  Output in two columns.
    -W NUM  --width=NUM  Output at most NUM (default 130) print columns.
    --left-column  Output only the left column of common lines.
    --suppress-common-lines  Do not output common lines.
  -D NAME  --ifdef=NAME  Output merged file to show '#ifdef NAME' diffs.
  --GTYPE-group-format=GFMT  Similar, but format GTYPE input groups with GFMT.
  --line-format=LFMT  Similar, but format all input lines with LFMT.
  --LTYPE-line-format=LFMT  Similar, but format LTYPE input lines with LFMT.
    LTYPE is 'old', 'new', or 'unchanged'.  GTYPE is LTYPE or 'changed'.
    GFMT may contain:
      %<  lines from FILE1
      %>  lines from FILE2
      %=  lines common to FILE1 and FILE2
      %[-][WIDTH][.[PREC]]{doxX}LETTER  printf-style spec for LETTER
        LETTERs are as follows for new group, lower case for old group:
          F  first line number
          L  last line number
          N  number of lines = L-F+1
          E  F-1
          M  L+1
    LFMT may contain:
      %L  contents of line
      %l  contents of line, excluding any trailing newline
      %[-][WIDTH][.[PREC]]{doxX}n  printf-style spec for input line number
    Either GFMT or LFMT may contain:
      %%  %
      %c'C'  the single character C
      %c'\OOO'  the character with octal code OOO

  -l  --paginate  Pass the output through 'pr' to paginate it.
  -t  --expand-tabs  Expand tabs to spaces in output.
  -T  --initial-tab  Make tabs line up by prepending a tab.
  --tabsize=NUM  Tab stops are every NUM (default 8) print columns.
  --suppress-blank-empty  Suppress space or tab before empty output lines.

  -r  --recursive  Recursively compare any subdirectories found.
  -N  --new-file  Treat absent files as empty.
  --unidirectional-new-file  Treat absent first files as empty.
  -s  --report-identical-files  Report when two files are the same.
  -x PAT  --exclude=PAT  Exclude files that match PAT.
  -X FILE  --exclude-from=FILE  Exclude files that match any pattern in FILE.
  -S FILE  --starting-file=FILE  Start with FILE when comparing directories.
  --from-file=FILE1  Compare FILE1 to all operands.  FILE1 can be a directory.
  --to-file=FILE2  Compare all operands to FILE2.  FILE2 can be a directory.

  --horizon-lines=NUM  Keep NUM lines of the common prefix and suffix.
  -d  --minimal  Try hard to find a smaller set of changes.
  --speed-large-files  Assume large files and many scattered small changes.

  -v  --version  Output version info.
  --help  Output this help.

FILES are 'FILE1 FILE2' or 'DIR1 DIR2' or 'DIR FILE...' or 'FILE... DIR'.
If --from-file or --to-file is given, there are no restrictions on FILES.
If a FILE is '-', read standard input.
Exit status is 0 if inputs are the same, 1 if different, 2 if trouble.

Report bugs to: bug-diffutils@gnu.org
GNU diffutils home page: <http://www.gnu.org/software/diffutils/>
General help using GNU software: <http://www.gnu.org/gethelp/>

14.Sanity test:
create two directories
command used:
mkdir diffutils-3.0
mkdir diffutils-3.0-patch

git clone https://git.savannah.gnu.org/git/diffutils.git
cd diffutils
git checkout v3.0

copy the source code into directories
command used:
cp -r diffutils/src/*.c diffutils-3.0
cp -r lab7/diffutils/src/*.c diffutils-3.0-patch

run the given command
command used:
lab7/diffutils/src/diff -pru diffutils-3.0 diffutils-3.0-patch >quote-3.0-test.txt


15.
command used:
diff quote-3.0-test.txt ~/lab7/diffutils/quote-3.0-patch.txt
The files are not identical, by looking through the diff output, the differences are not innocuous, quote-3.0-patch.txt will effectively replace all the "`" in the pieces of code with "'".













 