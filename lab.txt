1.I wrote detailed codes and comments in the file tr2b.c

2.I wrote detailed codes and comments in the file tr2u.c

3.Test it on a big file with 5000000 bytes
  command used:head --bytes=5000000 /dev/urandom > output.txt
  
3(a)
compare the system calls issued by your tr2b and tr2u commands
when copying one file to another
  command used: strace -c ./tr2b 'A' 'B' <output.txt >copyb.txt

% time     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
 68.26    0.001058           2       611           write
 30.77    0.000477           1       613           read
  0.52    0.000008           2         4           fstat
  0.45    0.000007           1         9           mmap
  0.00    0.000000           0         2           open
  0.00    0.000000           0         2           close
  0.00    0.000000           0         4           mprotect
  0.00    0.000000           0         1           munmap
  0.00    0.000000           0         1           brk
  0.00    0.000000           0         1         1 access
  0.00    0.000000           0         1           execve
  0.00    0.000000           0         1           arch_prctl
------ ----------- ----------- --------- --------- ----------------
100.00    0.001550                  1250         1 total
   tr2b takes only 0.001550 second with just 1250 calls.
 
  command used:strace -c ./tr2u 'A' 'B' <output.txt >copyu.txt

% time     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
 54.86   21.948284           4   5000000           write
 45.14   18.058305           4   5000002           read
  0.00    0.000093          13         7           mmap
  0.00    0.000063          16         4           mprotect
  0.00    0.000032          16         2           open
  0.00    0.000023          23         1           munmap
  0.00    0.000016           8         2           fstat
  0.00    0.000016          16         1         1 access
  0.00    0.000014           7         2           close
  0.00    0.000014          14         1           execve
  0.00    0.000008           8         1           brk
  0.00    0.000008           8         1           arch_prctl
------ ----------- ----------- --------- --------- ----------------
100.00   40.006876              10000024         1 total
  tr2u takes 40.006876 seconds and 10000024 calls, which is much more than tr2b
because tr2b uses C library functions and buffered I/O decreases the number of 
read/write system calls and the corresponding overhead.


3(b)
compare the system calls issued by your tr2b and tr2u commands
when copying a file to your terminal
   command used: strace -c ./tr2b 'A' 'B' <output.txt 
% time     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
 97.81    0.111043           6     19928           write
  2.19    0.002485           4       613           read
  0.00    0.000000           0         2           open
  0.00    0.000000           0         2           close
  0.00    0.000000           0         4           fstat
  0.00    0.000000           0         9           mmap
  0.00    0.000000           0         4           mprotect
  0.00    0.000000           0         1           munmap
  0.00    0.000000           0         1           brk
  0.00    0.000000           0         1         1 access
  0.00    0.000000           0         1           execve
  0.00    0.000000           0         1           arch_prctl
------ ----------- ----------- --------- --------- ----------------
100.00    0.113528                 20567         1 total
  tr2b takes 0.113528 second and 20567 calls and it takes longer time and much more  
write system calls than copying one file to another.

 command used: strace -c ./tr2u 'A' 'B' <output.txt 
% time     seconds  usecs/call     calls    errors syscall
------ ----------- ----------- --------- --------- ----------------
 56.72   25.908999           5   5000000           write
 43.28   19.766590           4   5000002           read
  0.00    0.000000           0         2           open
  0.00    0.000000           0         2           close
  0.00    0.000000           0         2           fstat
  0.00    0.000000           0         7           mmap
  0.00    0.000000           0         4           mprotect
  0.00    0.000000           0         1           munmap
  0.00    0.000000           0         1           brk
  0.00    0.000000           0         1         1 access
  0.00    0.000000           0         1           execve
  0.00    0.000000           0         1           arch_prctl
------ ----------- ----------- --------- --------- ----------------
100.00   45.675589              10000024         1 total
   tr2u takes 45.675589 seconds and 10000024 calls, which is similar to the result 
from copying one file to another, except it requires a bit more time(from 40 to 45).


4.Time comparison
 command used:time ./tr2b 'A' 'B' <output.txt >t1.txt 
	real	0m0.256s
	user	0m0.187s
	sys	0m0.011s

 command used:time ./tr2u 'A' 'B' <output.txt >t2.txt 
	real	0m12.558s
	user	0m3.184s
	sys	0m9.330s
  
 command used:time ./tr2b 'A' 'B' <output.txt
	real	0m3.256s
	user	0m0.274s
	sys	0m0.095s

 command used:time ./tr2u 'A' 'B' <output.txt
	real	0m11.743s
	user	0m3.331s
	sys	0m8.393s
According to the result, tr2b is much faster than tr2u because tr2b uses C library
functions getchar() and putchar() to avoid system call overhead. tr2b read from
STDIN and write to STDOUT. Stdout is buffered,Buffered output improves I/O 
performance and can reduce system calls. tr2u uses read and write function to read 
and write a single byte at a time, instead of using getchar and putchar. 





 
  